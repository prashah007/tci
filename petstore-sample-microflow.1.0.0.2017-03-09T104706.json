{"host":"petstore.swagger.io","protocol":"http","basePath":"/v2","rules":[{"path":"/pet","method":"put","produces":["application/xml","application/json"],"frontendPath":"/pet","requestRules":[],"responseRules":[],"operationId":"updatePet","consumes":["application/json","application/xml"]},{"path":"/user","method":"post","produces":["application/xml","application/json"],"frontendPath":"/user","requestRules":[],"responseRules":[],"operationId":"createUser","consumes":[]},{"path":"/user/login","method":"get","produces":["application/xml","application/json"],"frontendPath":"/user/login","requestRules":[],"responseRules":[],"operationId":"loginUser"},{"path":"/pet/{petId}","method":"get","produces":["application/xml","application/json"],"frontendPath":"/pet/{petId}","requestRules":[{"policyName":"mg-req-caching","parameters":[{"name":"timeUnit","value":"seconds","type":"String"},{"name":"time","value":103,"type":"Number"}]}],"responseRules":[],"operationId":"getPetById"},{"path":"/pet/{petId}","method":"post","produces":["application/xml","application/json"],"frontendPath":"/pet/{petId}","requestRules":[],"responseRules":[],"operationId":"updatePetWithForm","consumes":["application/x-www-form-urlencoded"]},{"path":"/pet/{petId}","method":"delete","produces":["application/xml","application/json"],"frontendPath":"/pet/{petId}","requestRules":[],"responseRules":[],"operationId":"deletePet"},{"path":"/store/order","method":"post","produces":["application/xml","application/json"],"frontendPath":"/store/order","requestRules":[],"responseRules":[],"operationId":"placeOrder","consumes":[]},{"path":"/user/logout","method":"get","produces":["application/xml","application/json"],"frontendPath":"/user/logout","requestRules":[],"responseRules":[],"operationId":"logoutUser"},{"path":"/pet/findByTags","method":"get","produces":["application/xml","application/json"],"frontendPath":"/pet/findByTags","requestRules":[],"responseRules":[],"operationId":"findPetsByTags"},{"path":"/store/inventory","method":"get","produces":["application/json"],"frontendPath":"/store/inventory","requestRules":[],"responseRules":[],"operationId":"getInventory"},{"path":"/user/{username}","method":"get","produces":["application/xml","application/json"],"frontendPath":"/user/{username}","requestRules":[],"responseRules":[],"operationId":"getUserByName"},{"path":"/user/{username}","method":"put","produces":["application/xml","application/json"],"frontendPath":"/user/{username}","requestRules":[],"responseRules":[],"operationId":"updateUser","consumes":[]},{"path":"/user/{username}","method":"delete","produces":["application/xml","application/json"],"frontendPath":"/user/{username}","requestRules":[],"responseRules":[],"operationId":"deleteUser"},{"path":"/user/createWithList","method":"post","produces":["application/xml","application/json"],"frontendPath":"/user/createWithList","requestRules":[],"responseRules":[],"operationId":"createUsersWithListInput","consumes":[]},{"path":"/user/createWithArray","method":"post","produces":["application/xml","application/json"],"frontendPath":"/user/createWithArray","requestRules":[{"policyName":"mg-req-throttle","parameters":[{"name":"numberOfTransactionsPerSecond","value":1,"type":"Number","description":"Number of transactions allowed in rolling window"}]},{"policyName":"mg-req-transformation","parameters":[{"name":"name","value":"Limit users number","type":"String"},{"name":"description","value":"Limit the users number can create one request, currently we limit to 3","type":"String"},{"name":"formatRequestFunc","value":"  // Limit the number of user can put on one time, for test purpose, limit to create 3 user at one time\n  var _ = require('lodash');\n  if(payload&&payload.length>=4){\n    var newPayload = _.slice(payload, 0, 3);\n    payload = newPayload;\n  } \n\n  done(payload);\n","type":"String"}]}],"responseRules":[{"policyName":"mg-res-transformation","parameters":[{"name":"name","value":"Add message","type":"String"},{"name":"description","value":"Add a message to response, let user know if pass more then 3 user, we will just save the first 3 users","type":"String"},{"name":"formatResponseFunc","value":"  var _ = require('lodash');\n  if(!body){\n    body = {\n      \"message\": \"If you pass more then 3 user, we just save the first 3 user, other user will be dropped\"\n    };\n  }else if(_.isObject(body)){\n    body.message = \"If you pass more then 3 user, we just save the first 3 user, other user will be dropped\";\n  } \n\n  done(body);\n","type":"String"}]}],"operationId":"createUsersWithArrayInput","consumes":[]},{"path":"/store/order/{orderId}","method":"get","produces":["application/xml","application/json"],"frontendPath":"/store/order/{orderId}","requestRules":[],"responseRules":[],"operationId":"getOrderById"},{"path":"/store/order/{orderId}","method":"delete","produces":["application/xml","application/json"],"frontendPath":"/store/order/{orderId}","requestRules":[],"responseRules":[],"operationId":"deleteOrder"},{"path":"/pet/{petId}/uploadImage","method":"post","produces":["application/json"],"frontendPath":"/pet/{petId}/uploadImage","requestRules":[],"responseRules":[],"operationId":"uploadFile","consumes":["multipart/form-data"]},{"path":"/pet","method":"post","produces":["application/xml","application/json"],"frontendPath":"<unlinked>","requestRules":[],"responseRules":[],"operationId":"addPet","consumes":[]},{"path":"/pet/findByStatus","method":"get","produces":["application/xml","application/json"],"frontendPath":"<unlinked>","requestRules":[],"responseRules":[],"operationId":"findPetsByStatus"}]}