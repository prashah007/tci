"consumes:\n- application/json\ndefinitions:\n  Pet:\n    properties:\n      category:\n        $ref: '#/definitions/category'\n      id:\n        type: string\n      name:\n        type: string\n      photoUrls:\n        $ref: '#/definitions/photoUrls'\n      status:\n        type: string\n      tags:\n        $ref: '#/definitions/tags'\n    required:\n    - photoUrls\n    - name\n    - id\n    - category\n    - status\n    - tags\n    type: object\n  category:\n    properties:\n      id:\n        type: string\n      name:\n        type: string\n    required:\n    - name\n    - id\n    type: object\n  photoUrls:\n    properties:\n      photoUrl:\n        type: string\n    required:\n    - photoUrl\n    type: object\n  tag:\n    properties:\n      id:\n        type: string\n      name:\n        type: string\n    required:\n    - name\n    - id\n    type: object\n  tags:\n    properties:\n      tag:\n        items:\n          $ref: '#/definitions/tag'\n        type: array\n    type: object\ninfo:\n  contact:\n    email: tci@tibco.com\n    name: TIBCO Cloud Integration Team\n    url: https://integration.cloud.tibco.com/docs/index.html\n  description: To get you started with the API Modeling and Mock capabilities of TIBCO\n    Cloud Integration we've created a sample API Specification for you. This sample\n    shows an API Specification for a PetStore API that can GET (retrieve), POST (create),\n    PUT (update) and DELETE pets in the store. To make things easier we've only created\n    a small specification with a single resource '/pet/{petId}'\n  title: TIBCO Cloud Integration PetStore Sample\n  version: \"1.1\"\npaths:\n  /pet/{petId}:\n    delete:\n      consumes:\n      - application/json\n      description: The DELETE method in an API Specification is used to remove a resource\n        from the API. In this case it would remove the pet with the petId you specify\n        when calling the API. When you create a [Mock application](https://integration.cloud.tibco.com/docs/mockapp/creatingMockApp/index.html#APIModeler)\n        from this specification it will also show you a sample response.\n      operationId: deletepet\n      parameters:\n      - description: The ID of the pet to be removed\n        in: path\n        name: petId\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: a string to be returned\n          schema:\n            type: string\n      summary: Use the DELETE method of this API specification to remove (DELETE)\n        a pet from the store\n    get:\n      consumes:\n      - application/json\n      description: The GET method in an API Specification is used to retrieve a resource\n        from the API. In this case it would retrieve a pet with the petId you specify\n        when calling the API. When the pet is found it will return the information\n        to you. When you create a [Mock application](https://integration.cloud.tibco.com/docs/mockapp/creatingMockApp/index.html#APIModeler)\n        from this specification it will also show you a sample response.\n      operationId: getpet\n      parameters:\n      - description: The ID of the pet you want to retrieve\n        in: path\n        name: petId\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: a Pet to be returned\n          examples:\n            application/json:\n              category:\n                id: \"1\"\n                name: Domesticated pets\n              id: \"6\"\n              name: Dog6\n              photoUrls:\n                photoUrl: http://s5.favim.com/orig/69/adorable-cute-dog-photography-Favim.com-659715.jpg\n              status: Available\n              tags:\n                tag:\n                - id: \"6\"\n                  name: Dogs\n          schema:\n            $ref: '#/definitions/Pet'\n      summary: Use the GET method of this API specification to retrieve (get) a pet\n        from the store\n    post:\n      consumes:\n      - application/json\n      description: The POST method in an API Specification is used to create a new\n        resource. In this case it would create a new pet with the petId you specify\n        when calling the API and the information you add to the body (e.g. the name\n        or the status). When you create a [Mock application](https://integration.cloud.tibco.com/docs/mockapp/creatingMockApp/index.html#APIModeler)\n        from this specification it will also show you a sample request and a sample\n        response.\n      operationId: postpet\n      parameters:\n      - description: The information of the pet you want to create in the store\n        in: body\n        name: Pet Information\n        required: true\n        schema:\n          $ref: '#/definitions/Pet'\n      - description: The ID of the pet you want to create\n        in: path\n        name: petId\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: a Pet to be returned\n          examples:\n            application/json:\n              category:\n                id: \"1\"\n                name: Domesticated pets\n              id: \"6\"\n              name: Dog6\n              photoUrls:\n                photoUrl: http://s5.favim.com/orig/69/adorable-cute-dog-photography-Favim.com-659715.jpg\n              status: Available\n              tags:\n                tag:\n                - id: \"6\"\n                  name: Dogs\n          schema:\n            $ref: '#/definitions/Pet'\n      summary: Use the POST method of this API specification to create a new pet\n    put:\n      consumes:\n      - application/json\n      description: The PUT method in an API Specification is used to create a new\n        resource or update an existing resource. Based on the ID you specify when\n        calling the API it would create a new pet in the store if the ID isn't in\n        use or will update the pet that has the ID if the ID already exists. It would\n        create or update the pet with the information you add to the body (e.g. the\n        name or the status). When you create a [Mock application](https://integration.cloud.tibco.com/docs/mockapp/creatingMockApp/index.html#APIModeler)\n        from this specification it will also show you a sample request and a sample\n        response.\n      operationId: putpet\n      parameters:\n      - description: The information of the pet you want to create in the store\n        in: body\n        name: Pet Information\n        required: true\n        schema:\n          $ref: '#/definitions/Pet'\n      - description: The ID of the pet\n        in: path\n        name: petId\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: a Pet to be returned\n          examples:\n            application/json:\n              category:\n                id: \"1\"\n                name: Domesticated pets\n              id: \"6\"\n              name: Dog6\n              photoUrls:\n                photoUrl: http://s5.favim.com/orig/69/adorable-cute-dog-photography-Favim.com-659715.jpg\n              status: Available\n              tags:\n                tag:\n                - id: \"6\"\n                  name: Dogs\n          schema:\n            $ref: '#/definitions/Pet'\n      summary: Use the PUT method of this API specification to update a pet\nproduces:\n- application/json\nschemes:\n- http\nswagger: \"2.0\"\n"